# Task ID: 5
# Title: Implement Sub-Agent Functionality
# Status: pending
# Dependencies: 2, 3
# Priority: high
# Description: Create functionality to spawn isolated mini-AI threads (e.g., "outline helper," "ad copy draft") that don't clutter the main document and can be merged when ready.
# Details:
1. Create sub-agent model and controller:
   ```ruby
   # app/models/sub_agent.rb
   class SubAgent < ApplicationRecord
     belongs_to :document
     belongs_to :user
     has_many :messages
     validates :name, presence: true
   end

   # app/controllers/sub_agents_controller.rb
   class SubAgentsController < ApplicationController
     def create
       @document = Document.find(params[:document_id])
       @sub_agent = @document.sub_agents.build(sub_agent_params)
       @sub_agent.user = current_user
       
       claude_service = ClaudeService.new
       agent_id = claude_service.create_sub_agent(@sub_agent.name)
       @sub_agent.external_id = agent_id
       
       # Save and respond
     end
     # Other actions
   end
   ```
2. Create UI for sub-agent creation and management
3. Implement sub-agent conversation interface
4. Add functionality to merge sub-agent content into main document
5. Create Stimulus controller for sub-agent interactions
6. Implement sub-agent context isolation
7. Add ability to share context between main document and sub-agents

# Test Strategy:
1. Test sub-agent creation and initialization
2. Verify sub-agent conversations work correctly
3. Test merging sub-agent content into main document
4. Verify context isolation between sub-agents
5. Test sharing context between document and sub-agents
6. Ensure sub-agents persist between sessions
