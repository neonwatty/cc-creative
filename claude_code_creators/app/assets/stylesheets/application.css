/*
 * This is a manifest file that'll be compiled into application.css.
 *
 * With Propshaft, assets are served efficiently without preprocessing steps. You can still include
 * application-wide styles in this file, but keep in mind that CSS precedence will follow the standard
 * cascading order, meaning styles declared later in the document or manifest will override earlier ones,
 * depending on specificity.
 *
 * Consider organizing styles into separate files for maintainability.
 */

@import "actiontext.css";
@import "components/context_item_preview.css";
@import "responsive-patterns.css";

/* Drag and Drop Styles */
.sortable-ghost {
  opacity: 0.4;
  background-color: #f3f4f6;
}

.sortable-chosen {
  background-color: #e5e7eb;
}

.sortable-drag {
  background-color: white;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  transform: rotate(2deg);
}

/* Drop zone styles */
.drop-zone-active {
  position: relative;
}

.drop-zone-active::after {
  content: '';
  position: absolute;
  inset: -4px;
  border: 2px dashed #3b82f6;
  border-radius: 0.5rem;
  pointer-events: none;
  animation: pulse-border 2s infinite;
}

.drop-zone-hover::after {
  border-color: #1d4ed8;
  background-color: rgba(59, 130, 246, 0.05);
}

@keyframes pulse-border {
  0%, 100% {
    opacity: 0.5;
  }
  50% {
    opacity: 1;
  }
}

/* Dragging state */
body.dragging-context-item trix-editor {
  cursor: copy;
}

/* Drag handle styles */
.drag-handle {
  touch-action: none;
}

.drag-handle:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

/* Sub-Agent Animation Styles */
@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fade-in 0.3s ease-out forwards;
}

/* Sub-Agent Message Styles */
.message-item {
  transition: all 0.3s ease-out;
}

/* Sub-Agent Dialog Styles */
.dialog-content {
  transition: all 0.3s ease-out;
}

.backdrop {
  transition: opacity 0.3s ease-out;
}

/* Loading animations */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

/* Typing indicator */
@keyframes bounce {
  0%, 60%, 100% {
    transform: translateY(0);
  }
  30% {
    transform: translateY(-10px);
  }
}

.animate-bounce {
  animation: bounce 1.4s infinite ease-in-out;
}
