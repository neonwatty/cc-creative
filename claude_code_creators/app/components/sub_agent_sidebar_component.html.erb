<div class="h-full flex flex-col bg-gray-50 border-r border-gray-200" 
     data-controller="sub-agent-sidebar"
     data-sub-agent-sidebar-document-id-value="<%= document.id %>">
  
  <!-- Header -->
  <div class="px-4 py-3 border-b border-gray-200 bg-white">
    <h2 class="text-lg font-semibold text-gray-900">Sub-Agents</h2>
    <p class="text-sm text-gray-600 mt-1">AI assistants for your document</p>
  </div>

  <!-- New Agent Button with Dropdown -->
  <div class="px-4 py-3 bg-white border-b border-gray-200">
    <div class="relative" data-controller="dropdown">
      <button type="button"
              class="<%= new_agent_button_classes %>"
              data-action="click->dropdown#toggle"
              data-dropdown-target="button"
              aria-expanded="false"
              aria-haspopup="true">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
        </svg>
        New Sub-Agent
        <svg class="ml-2 -mr-1 h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
        </svg>
      </button>

      <!-- Dropdown Menu -->
      <div class="hidden absolute left-0 right-0 mt-2 bg-white rounded-lg shadow-lg border border-gray-200 z-10"
           data-dropdown-target="menu"
           data-transition-enter="transition ease-out duration-100"
           data-transition-enter-start="transform opacity-0 scale-95"
           data-transition-enter-end="transform opacity-100 scale-100"
           data-transition-leave="transition ease-in duration-75"
           data-transition-leave-start="transform opacity-100 scale-100"
           data-transition-leave-end="transform opacity-0 scale-95">
        <div class="py-1" role="menu" aria-orientation="vertical">
          <% agent_types.each do |agent_type| %>
            <%= button_to document_sub_agents_path(document),
                          method: :post,
                          params: { sub_agent: { agent_type: agent_type[:value] } },
                          class: "w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors",
                          role: "menuitem",
                          data: { turbo_frame: "_top" } do %>
              <div class="flex items-start">
                <span class="text-xl mr-3"><%= agent_type[:icon] %></span>
                <div class="flex-1">
                  <div class="font-medium"><%= agent_type[:label] %></div>
                  <div class="text-xs text-gray-500"><%= agent_type[:description] %></div>
                </div>
              </div>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <!-- Agent List -->
  <div class="flex-1 overflow-y-auto">
    <% if empty_state_visible? %>
      <!-- Empty State -->
      <div class="p-6 text-center">
        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
        </svg>
        <p class="mt-2 text-sm text-gray-600">No sub-agents yet</p>
        <p class="text-xs text-gray-500 mt-1">Create one to start collaborating</p>
      </div>
    <% else %>
      <!-- Active Agents Section -->
      <% if active_agents.any? %>
        <div class="px-4 py-2 bg-gray-100 border-b border-gray-200">
          <h3 class="text-xs font-semibold text-gray-700 uppercase tracking-wider">Active</h3>
        </div>
        <div class="divide-y divide-gray-200">
          <% active_agents.each do |agent| %>
            <%= render "sub_agents/sub_agent_item", 
                       agent: agent, 
                       selected: agent_selected?(agent),
                       agent_icon: agent_icon(agent.agent_type),
                       status_badge_classes: status_badge_classes(agent.status),
                       status_icon: status_icon(agent.status),
                       format_timestamp: format_timestamp(agent.updated_at) %>
          <% end %>
        </div>
      <% end %>

      <!-- Completed Agents Section -->
      <% if completed_agents.any? %>
        <div class="px-4 py-2 bg-gray-100 border-b border-gray-200 <%= 'mt-4' if active_agents.any? %>">
          <h3 class="text-xs font-semibold text-gray-700 uppercase tracking-wider">Completed</h3>
        </div>
        <div class="divide-y divide-gray-200">
          <% completed_agents.each do |agent| %>
            <%= render "sub_agents/sub_agent_item", 
                       agent: agent, 
                       selected: agent_selected?(agent),
                       agent_icon: agent_icon(agent.agent_type),
                       status_badge_classes: status_badge_classes(agent.status),
                       status_icon: status_icon(agent.status),
                       format_timestamp: format_timestamp(agent.updated_at) %>
          <% end %>
        </div>
      <% end %>

      <!-- Other Status Agents -->
      <% other_agents = sub_agents - active_agents - completed_agents %>
      <% if other_agents.any? %>
        <div class="px-4 py-2 bg-gray-100 border-b border-gray-200 <%= 'mt-4' if active_agents.any? || completed_agents.any? %>">
          <h3 class="text-xs font-semibold text-gray-700 uppercase tracking-wider">Other</h3>
        </div>
        <div class="divide-y divide-gray-200">
          <% other_agents.each do |agent| %>
            <%= render "sub_agents/sub_agent_item", 
                       agent: agent, 
                       selected: agent_selected?(agent),
                       agent_icon: agent_icon(agent.agent_type),
                       status_badge_classes: status_badge_classes(agent.status),
                       status_icon: status_icon(agent.status),
                       format_timestamp: format_timestamp(agent.updated_at) %>
          <% end %>
        </div>
      <% end %>
    <% end %>
  </div>

  <!-- Loading State Skeleton -->
  <template data-sub-agent-sidebar-target="loadingTemplate">
    <div class="animate-pulse">
      <div class="px-4 py-3 border-b border-gray-200">
        <div class="h-4 bg-gray-200 rounded w-3/4"></div>
        <div class="h-3 bg-gray-200 rounded w-1/2 mt-2"></div>
      </div>
      <div class="px-4 py-4">
        <div class="space-y-3">
          <div class="h-10 bg-gray-200 rounded"></div>
          <div class="h-10 bg-gray-200 rounded"></div>
          <div class="h-10 bg-gray-200 rounded"></div>
        </div>
      </div>
    </div>
  </template>
</div>